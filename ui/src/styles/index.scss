@import url("https://fonts.googleapis.com/css?family=Source+Code+Pro");
@import "../../node_modules/flex-utils/css/flex-utils.min.css";
@import "../../node_modules/react-select/dist/react-select.min.css";
@import "./utils/colors.scss";
@import "./utils/variables.scss";
@import "./utils/mixins.scss";
@import "./utils/base.scss";
@import "./utils/typography.scss";
@import "./utils/utils.scss";

@import "./primitives/button.scss";
@import "./primitives/card.scss";
@import "./primitives/form.scss";
@import "./primitives/loader.scss";
@import "./primitives/modal.scss";
@import "./primitives/popup.scss";
@import "./primitives/table.scss";
@import "./primitives/tabs.scss";
@import "./primitives/tag.scss";
@import "./primitives/topbar.scss";
@import "./primitives/view-header.scss";
@import "./primitives/view.scss";
@import "./extended/redux-form-group.scss";

//
// Mixins/Variables
//
$flot-view-breakpoint-medium: 800px;
$flot-view-breakpoint-small: 550px;
$monospace-font-family: "Source Code Pro", "Roboto Mono", monospace;
$small-font-size: 0.9rem;

@mixin monospace() {
  font-family: $monospace-font-family !important;
  font-size: $small-font-size !important;
}

@mixin key-value-container($direction) {
  $kv-border: 1px solid $black_2;
  $kv-spacing: $spacing;

  width: 100%;
  height: 100%;

  @if $direction == "vertical" {
    @include flex(column, nowrap, flex-start, stretch);
    width: 100%;
    & > * {
      border-bottom: $kv-border;
      padding: $kv-spacing;
      &:last-child {
        border-bottom: none;
      }
    }
  } @else if $direction == "horizontal" {
    @include flex(row, nowrap, flex-start, center);
    width: 100%;
    & > * {
      border-right: $kv-border;
      padding: $kv-spacing;
      &:last-child {
        border-right: none;
      }
    }
  }
}

//
// General
//
::selection {
  background: $blue_4;
  color: $gray_4;
}

pre,
code {
  white-space: pre-wrap;
  word-break: break-all;
  @include monospace();
}

.text-small {
  font-size: $small-font-size;
  color: $light_gray_0;
}

//
// Topbar
//
img.topbar-logo {
  width: 32px;
  height: 32px;
  border-radius: 6px;
  margin-right: 8px;
}

//
// Logs
//
.flot-logs-container {
  width: 100%;
  overflow-y: scroll;
  line-height: 1.5;
  // @TODO: un-magic number this.
  // const topbarHeight = 48
  // const viewHeaderHeight = 80
  // const viewHeaderMarginBottom = 24
  // const contentMarginBottom = 24
  // const viewInnerMarginBottom = 72
  // const runStatusBarHeight = 65 + 24
  height: calc(100vh - 248px);
  & > code {
    display: block;
  }
}

//
// Table
//
.table-footer {
  height: 48px;
  background: $black_2;
}

.sort-header {
  background: transparent;
  font-size: 1rem;
}

.pl-topbar-app-name {
  font-family: $monospace-font-family;
}
.pl-textarea {
  @include monospace();
}
.pl-topbar-container {
  background: transparentize(#2d343a, 0.05);
}
.pl-tag {
  @include monospace();
  background: $black_3;
  color: $blue_3;
  letter-spacing: 0.02rem;
}

.pl-tr.hoverable:hover > .pl-td {
  color: $color-primary !important;
}

.pl-td {
  color: $gray_3;
}

.pl-input:focus {
  border-color: $color-primary;
}

.Select.is-focused > .Select-control {
  border-color: $color-primary !important;
}

//
// Key Value Container
//
.key-value-container {
  &.horizontal {
    @include key-value-container(horizontal);
  }
  &.vertical {
    @include key-value-container(vertical);
  }
}

//
// Empty Table
//
.flot-empty-table {
  width: 100%;
  height: 400px;
  @include flex(column, nowrap, center, center);
  &.error {
    color: $red_0;
  }
  & > * {
    margin-bottom: $spacing;
  }
  .flot-empty-table-title {
    font-size: 1.25rem;
  }
  .flot-empty-table-actions {
    @include flex(row, nowrap, center, center);
  }
}

//
// List View (Tasks, ActiveRuns)
//
.flot-list-view {
  @include flex(column, nowrap, flex-start, stretch);
  width: 100%;

  .flot-list-view-filters-container {
    margin-bottom: $spacing * 2;
  }
  .flot-list-view-filters {
    width: 100%;
    @include key-value-container(horizontal);
  }

  @media (max-width: $flot-view-breakpoint-medium) {
    @include flex(column, nowrap, flex-start, stretch);

    .flot-list-view-filters {
      @include key-value-container(vertical);
    }
  }
}

//
// Detail View (Task, Run)
//
.flot-detail-view {
  @include flex(row, nowrap, flex-start, flex-start);
  width: 100%;

  .flot-detail-view-sidebar {
    $_width: 400px;
    margin-right: $spacing * 2;
    width: $_width;
    min-width: $_width;
    .flot-detail-view-sidebar-card-content {
      @include key-value-container(vertical);
    }
    & > * {
      margin-bottom: $spacing * 1.5;
    }
  }

  // Views wider than $flot-view-breakpoint-medium
  @media (min-width: $flot-view-breakpoint-medium) {
    &.flot-run-view {
      .flot-detail-view-sidebar {
        max-height: calc(
          100vh - #{$topbar-height} - #{$view-header-height} - #{$spacing * 2}
        );
        overflow-y: scroll;
        padding-bottom: $spacing * 2;
      }
    }
  }

  // Views narrower than $flot-view-breakpoint-medium
  @media (max-width: $flot-view-breakpoint-medium) {
    @include flex(column, nowrap, flex-start, stretch);

    .flot-detail-view-sidebar {
      margin-right: 0;
      margin-bottom: $spacing * 2;
      width: 100%;
    }
  }
}

// Hide certain columns for narrow views
@media (max-width: $flot-view-breakpoint-medium) {
  .pl-hide-med {
    display: none;
  }
}
@media (max-width: $flot-view-breakpoint-small) {
  .pl-hide-small {
    display: none !important;
  }
}
